#ifndef SINEN_KEYINPUT_HPP
#define SINEN_KEYINPUT_HPP
#include <cstdint>
namespace sinen {
class KeyInput {
public:
  enum class KeyCode;
  static bool IsPressed(KeyCode key);
  static bool IsDown(KeyCode key);
  static bool IsReleased(KeyCode key);

  // Logical Key codes using SDL's keycode system.
  enum class KeyCode {

    UNKNOWN = 0x00000000u,       /**< 0 */
    RETURN = 0x0000000du,        /**< '\r' */
    ESCAPE = 0x0000001bu,        /**< '\x1B' */
    BACKSPACE = 0x00000008u,     /**< '\b' */
    TAB = 0x00000009u,           /**< '\t' */
    SPACE = 0x00000020u,         /**< ' ' */
    EXCLAIM = 0x00000021u,       /**< '!' */
    DBLAPOSTROPHE = 0x00000022u, /**< '"' */
    HASH = 0x00000023u,          /**< '#' */
    DOLLAR = 0x00000024u,        /**< '$' */
    PERCENT = 0x00000025u,       /**< '%' */
    AMPERSAND = 0x00000026u,     /**< '&' */
    APOSTROPHE = 0x00000027u,    /**< '\'' */
    LEFTPAREN = 0x00000028u,     /**< '(' */
    RIGHTPAREN = 0x00000029u,    /**< ')' */
    ASTERISK = 0x0000002au,      /**< '*' */
    PLUS = 0x0000002bu,          /**< '+' */
    COMMA = 0x0000002cu,         /**< ',' */
    MINUS = 0x0000002du,         /**< '-' */
    PERIOD = 0x0000002eu,        /**< '.' */
    SLASH = 0x0000002fu,         /**< '/' */
    Key0 = 0x00000030u,          /**< '0' */
    Key1 = 0x00000031u,          /**< '1' */
    Key2 = 0x00000032u,          /**< '2' */
    Key3 = 0x00000033u,          /**< '3' */
    Key4 = 0x00000034u,          /**< '4' */
    Key5 = 0x00000035u,          /**< '5' */
    Key6 = 0x00000036u,          /**< '6' */
    Key7 = 0x00000037u,          /**< '7' */
    Key8 = 0x00000038u,          /**< '8' */
    Key9 = 0x00000039u,          /**< '9' */
    COLON = 0x0000003au,         /**< ':' */
    SEMICOLON = 0x0000003bu,     /**< ';' */
    LESS = 0x0000003cu,          /**< '<' */
    EQUALS = 0x0000003du,        /**< '=' */
    GREATER = 0x0000003eu,       /**< '>' */
    QUESTION = 0x0000003fu,      /**< '?' */
    AT = 0x00000040u,            /**< '@' */
    LEFTBRACKET = 0x0000005bu,   /**< '[' */
    BACKSLASH = 0x0000005cu,     /**< '\\' */
    RIGHTBRACKET = 0x0000005du,  /**< ']' */
    CARET = 0x0000005eu,         /**< '^' */
    UNDERSCORE = 0x0000005fu,    /**< '_' */
    GRAVE = 0x00000060u,         /**< '`' */
    A = 0x00000061u,             /**< 'a' */
    B = 0x00000062u,             /**< 'b' */
    C = 0x00000063u,             /**< 'c' */
    D = 0x00000064u,             /**< 'd' */
    E = 0x00000065u,             /**< 'e' */
    F = 0x00000066u,             /**< 'f' */
    G = 0x00000067u,             /**< 'g' */
    H = 0x00000068u,             /**< 'h' */
    I = 0x00000069u,             /**< 'i' */
    J = 0x0000006au,             /**< 'j' */
    K = 0x0000006bu,             /**< 'k' */
    L = 0x0000006cu,             /**< 'l' */
    M = 0x0000006du,             /**< 'm' */
    N = 0x0000006eu,             /**< 'n' */
    O = 0x0000006fu,             /**< 'o' */
    P = 0x00000070u,             /**< 'p' */
    Q = 0x00000071u,             /**< 'q' */
    R = 0x00000072u,             /**< 'r' */
    S = 0x00000073u,             /**< 's' */
    T = 0x00000074u,             /**< 't' */
    U = 0x00000075u,             /**< 'u' */
    V = 0x00000076u,             /**< 'v' */
    W = 0x00000077u,             /**< 'w' */
    X = 0x00000078u,             /**< 'x' */
    Y = 0x00000079u,             /**< 'y' */
    Z = 0x0000007au,             /**< 'z' */
    LEFTBRACE = 0x0000007bu,     /**< '{' */
    PIPE = 0x0000007cu,          /**< '|' */
    RIGHTBRACE = 0x0000007du,    /**< '}' */
    TILDE = 0x0000007eu,         /**< '~' */
    DELETE = 0x0000007fu,        /**< '\x7F' */
    PLUSMINUS = 0x000000b1u,     /**< '\xB1' */
    CAPSLOCK =
        0x40000039u,   /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CAPSLOCK) */
    F1 = 0x4000003au,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F1) */
    F2 = 0x4000003bu,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F2) */
    F3 = 0x4000003cu,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F3) */
    F4 = 0x4000003du,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F4) */
    F5 = 0x4000003eu,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F5) */
    F6 = 0x4000003fu,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F6) */
    F7 = 0x40000040u,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F7) */
    F8 = 0x40000041u,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F8) */
    F9 = 0x40000042u,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F9) */
    F10 = 0x40000043u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F10) */
    F11 = 0x40000044u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F11) */
    F12 = 0x40000045u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F12) */
    PRINTSCREEN =
        0x40000046u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRINTSCREEN) */
    SCROLLLOCK =
        0x40000047u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SCROLLLOCK) */
    PAUSE = 0x40000048u,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAUSE) */
    INSERT = 0x40000049u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_INSERT) */
    HOME = 0x4000004au,   /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HOME) */
    PAGEUP = 0x4000004bu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEUP) */
    END = 0x4000004du,    /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_END) */
    PAGEDOWN =
        0x4000004eu,     /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEDOWN) */
    RIGHT = 0x4000004fu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RIGHT) */
    LEFT = 0x40000050u,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LEFT) */
    DOWN = 0x40000051u,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DOWN) */
    UP = 0x40000052u,    /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UP) */
    NUMLOCKCLEAR =
        0x40000053u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_NUMLOCKCLEAR) */
    KP_DIVIDE =
        0x40000054u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DIVIDE) */
    KP_MULTIPLY =
        0x40000055u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MULTIPLY) */
    KP_MINUS =
        0x40000056u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MINUS) */
    KP_PLUS = 0x40000057u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUS) */
    KP_ENTER =
        0x40000058u,    /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_ENTER) */
    KP_1 = 0x40000059u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_1) */
    KP_2 = 0x4000005au, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_2) */
    KP_3 = 0x4000005bu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_3) */
    KP_4 = 0x4000005cu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_4) */
    KP_5 = 0x4000005du, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_5) */
    KP_6 = 0x4000005eu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_6) */
    KP_7 = 0x4000005fu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_7) */
    KP_8 = 0x40000060u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_8) */
    KP_9 = 0x40000061u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_9) */
    KP_0 = 0x40000062u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_0) */
    KP_PERIOD =
        0x40000063u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERIOD) */
    APPLICATION =
        0x40000065u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APPLICATION) */
    POWER = 0x40000066u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_POWER) */
    KP_EQUALS =
        0x40000067u,   /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALS) */
    F13 = 0x40000068u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F13) */
    F14 = 0x40000069u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F14) */
    F15 = 0x4000006au, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F15) */
    F16 = 0x4000006bu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F16) */
    F17 = 0x4000006cu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F17) */
    F18 = 0x4000006du, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F18) */
    F19 = 0x4000006eu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F19) */
    F20 = 0x4000006fu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F20) */
    F21 = 0x40000070u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F21) */
    F22 = 0x40000071u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F22) */
    F23 = 0x40000072u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F23) */
    F24 = 0x40000073u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F24) */
    EXECUTE = 0x40000074u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXECUTE) */
    HELP = 0x40000075u,    /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HELP) */
    MENU = 0x40000076u,    /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MENU) */
    SELECT = 0x40000077u,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SELECT) */
    STOP = 0x40000078u,    /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_STOP) */
    AGAIN = 0x40000079u,   /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AGAIN) */
    UNDO = 0x4000007au,    /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UNDO) */
    CUT = 0x4000007bu,     /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CUT) */
    COPY = 0x4000007cu,    /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_COPY) */
    PASTE = 0x4000007du,   /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PASTE) */
    FIND = 0x4000007eu,    /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_FIND) */
    MUTE = 0x4000007fu,    /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MUTE) */
    VOLUMEUP =
        0x40000080u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEUP) */
    VOLUMEDOWN =
        0x40000081u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEDOWN) */
    KP_COMMA =
        0x40000085u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COMMA) */
    KP_EQUALSAS400 =
        0x40000086u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALSAS400)
                      */
    ALTERASE =
        0x40000099u,      /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_ALTERASE) */
    SYSREQ = 0x4000009au, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SYSREQ) */
    CANCEL = 0x4000009bu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CANCEL) */
    CLEAR = 0x4000009cu,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEAR) */
    PRIOR = 0x4000009du,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRIOR) */
    RETURN2 = 0x4000009eu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RETURN2) */
    SEPARATOR =
        0x4000009fu,    /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SEPARATOR) */
    OUT = 0x400000a0u,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OUT) */
    OPER = 0x400000a1u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OPER) */
    CLEARAGAIN =
        0x400000a2u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEARAGAIN) */
    CRSEL = 0x400000a3u,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CRSEL) */
    EXSEL = 0x400000a4u,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXSEL) */
    KP_00 = 0x400000b0u,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_00) */
    KP_000 = 0x400000b1u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_000) */
    THOUSANDSSEPARATOR =
        0x400000b2u, /**<
                        SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_THOUSANDSSEPARATOR)
                      */
    DECIMALSEPARATOR =
        0x400000b3u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DECIMALSEPARATOR)
                      */
    CURRENCYUNIT =
        0x400000b4u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYUNIT) */
    CURRENCYSUBUNIT =
        0x400000b5u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYSUBUNIT)
                      */
    KP_LEFTPAREN =
        0x400000b6u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTPAREN) */
    KP_RIGHTPAREN =
        0x400000b7u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTPAREN) */
    KP_LEFTBRACE =
        0x400000b8u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTBRACE) */
    KP_RIGHTBRACE =
        0x400000b9u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTBRACE) */
    KP_TAB = 0x400000bau, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_TAB) */
    KP_BACKSPACE =
        0x400000bbu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BACKSPACE) */
    KP_A = 0x400000bcu,   /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_A) */
    KP_B = 0x400000bdu,   /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_B) */
    KP_C = 0x400000beu,   /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_C) */
    KP_D = 0x400000bfu,   /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_D) */
    KP_E = 0x400000c0u,   /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_E) */
    KP_F = 0x400000c1u,   /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_F) */
    KP_XOR = 0x400000c2u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_XOR) */
    KP_POWER =
        0x400000c3u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_POWER) */
    KP_PERCENT =
        0x400000c4u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERCENT) */
    KP_LESS = 0x400000c5u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LESS) */
    KP_GREATER =
        0x400000c6u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_GREATER) */
    KP_AMPERSAND =
        0x400000c7u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AMPERSAND) */
    KP_DBLAMPERSAND =
        0x400000c8u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DBLAMPERSAND)
                      */
    KP_VERTICALBAR =
        0x400000c9u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_VERTICALBAR)
                      */
    KP_DBLVERTICALBAR =
        0x400000cau, /**<
                        SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DBLVERTICALBAR)
                      */
    KP_COLON =
        0x400000cbu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COLON) */
    KP_HASH = 0x400000ccu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HASH) */
    KP_SPACE =
        0x400000cdu,     /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_SPACE) */
    KP_AT = 0x400000ceu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AT) */
    KP_EXCLAM =
        0x400000cfu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EXCLAM) */
    KP_MEMSTORE =
        0x400000d0u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSTORE) */
    KP_MEMRECALL =
        0x400000d1u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMRECALL) */
    KP_MEMCLEAR =
        0x400000d2u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMCLEAR) */
    KP_MEMADD =
        0x400000d3u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMADD) */
    KP_MEMSUBTRACT =
        0x400000d4u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSUBTRACT)
                      */
    KP_MEMMULTIPLY =
        0x400000d5u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMMULTIPLY)
                      */
    KP_MEMDIVIDE =
        0x400000d6u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMDIVIDE) */
    KP_PLUSMINUS =
        0x400000d7u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUSMINUS) */
    KP_CLEAR =
        0x400000d8u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEAR) */
    KP_CLEARENTRY =
        0x400000d9u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEARENTRY) */
    KP_BINARY =
        0x400000dau, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BINARY) */
    KP_OCTAL =
        0x400000dbu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_OCTAL) */
    KP_DECIMAL =
        0x400000dcu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DECIMAL) */
    KP_HEXADECIMAL =
        0x400000ddu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HEXADECIMAL)
                      */
    LCTRL = 0x400000e0u,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LCTRL) */
    LSHIFT = 0x400000e1u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LSHIFT) */
    LALT = 0x400000e2u,   /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LALT) */
    LGUI = 0x400000e3u,   /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LGUI) */
    RCTRL = 0x400000e4u,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RCTRL) */
    RSHIFT = 0x400000e5u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RSHIFT) */
    RALT = 0x400000e6u,   /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RALT) */
    RGUI = 0x400000e7u,   /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RGUI) */
    MODE = 0x40000101u,   /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MODE) */
    SLEEP = 0x40000102u,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SLEEP) */
    WAKE = 0x40000103u,   /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_WAKE) */
    CHANNEL_INCREMENT =
        0x40000104u, /**<
                        SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CHANNEL_INCREMENT)
                      */
    CHANNEL_DECREMENT =
        0x40000105u, /**<
                        SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CHANNEL_DECREMENT)
                      */
    MEDIA_PLAY =
        0x40000106u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_PLAY) */
    MEDIA_PAUSE =
        0x40000107u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_PAUSE) */
    MEDIA_RECORD =
        0x40000108u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_RECORD) */
    MEDIA_FAST_FORWARD =
        0x40000109u, /**<
                        SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_FAST_FORWARD)
                      */
    MEDIA_REWIND =
        0x4000010au, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_REWIND) */
    MEDIA_NEXT_TRACK =
        0x4000010bu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_NEXT_TRACK)
                      */
    MEDIA_PREVIOUS_TRACK =
        0x4000010cu, /**<
                        SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_PREVIOUS_TRACK)
                      */
    MEDIA_STOP =
        0x4000010du, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_STOP) */
    MEDIA_EJECT =
        0x4000010eu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_EJECT) */
    MEDIA_PLAY_PAUSE =
        0x4000010fu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_PLAY_PAUSE)
                      */
    MEDIA_SELECT =
        0x40000110u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIA_SELECT) */
    AC_NEW = 0x40000111u,  /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_NEW) */
    AC_OPEN = 0x40000112u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_OPEN) */
    AC_CLOSE =
        0x40000113u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_CLOSE) */
    AC_EXIT = 0x40000114u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_EXIT) */
    AC_SAVE = 0x40000115u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_SAVE) */
    AC_PRINT =
        0x40000116u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_PRINT) */
    AC_PROPERTIES =
        0x40000117u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_PROPERTIES) */
    AC_SEARCH =
        0x40000118u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_SEARCH) */
    AC_HOME = 0x40000119u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_HOME) */
    AC_BACK = 0x4000011au, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BACK) */
    AC_FORWARD =
        0x4000011bu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_FORWARD) */
    AC_STOP = 0x4000011cu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_STOP) */
    AC_REFRESH =
        0x4000011du, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_REFRESH) */
    AC_BOOKMARKS =
        0x4000011eu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BOOKMARKS) */
    SOFTLEFT =
        0x4000011fu, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SOFTLEFT) */
    SOFTRIGHT =
        0x40000120u,    /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SOFTRIGHT) */
    CALL = 0x40000121u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CALL) */
    ENDCALL = 0x40000122u, /**< SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_ENDCALL) */
    LEFT_TAB = 0x20000001u,          /**< Extended key Left Tab */
    LEVEL5_SHIFT = 0x20000002u,      /**< Extended key Level 5 Shift */
    MULTI_KEY_COMPOSE = 0x20000003u, /**< Extended key Multi-key Compose */
    LMETA = 0x20000004u,             /**< Extended key Left Meta */
    RMETA = 0x20000005u,             /**< Extended key Right Meta */
    LHYPER = 0x20000006u,            /**< Extended key Left Hyper */
    RHYPER = 0x20000007u,            /**< Extended key Right Hyper */
  };
  using enum KeyCode;
};
} // namespace sinen

#endif // SINEN_KEYINPUT_HPP
